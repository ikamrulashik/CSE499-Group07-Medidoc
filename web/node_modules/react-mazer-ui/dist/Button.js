"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Button;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Button(props) {
  var label = props.label,
      status = props.status,
      isRounded = props.isRounded,
      disabled = props.disabled,
      size = props.size,
      icon = props.icon,
      className = props.className,
      onClick = props.onClick;

  var getClassStatus = function getClassStatus(val) {
    var listStatus = {
      "primary": "btn-primary",
      "primary-outline": "btn-outline-primary",
      "secondary": "btn-secondary",
      "secondary-outline": "btn-outline-secondary",
      "info": "btn-info",
      "info-outline": "btn-outline-info",
      "warning": "btn-warning",
      "warning-outline": "btn-outline-warning",
      "danger": "btn-danger",
      "danger-outline": "btn-outline-danger",
      "success": "btn-success",
      "success-outline": "btn-outline-success",
      "light": "btn-light",
      "light-outline": "btn-outline-light",
      "dark": "btn-dark",
      "dark-outline": "btn-outline-dark"
    };
    return listStatus[val];
  };

  var setIsRounded = function setIsRounded(val) {
    return val ? "rounded-pill" : "";
  };

  var setDisabled = function setDisabled(val) {
    return val ? "disabled" : "";
  };

  var setIcon = function setIcon(val) {
    return val ? "icon" : "";
  };

  var getClassSize = function getClassSize(val) {
    var listSize = {
      large: "btn-lg",
      small: "btn-sm"
    };
    return listSize[val];
  };

  return /*#__PURE__*/_react.default.createElement("button", {
    onClick: onClick,
    className: "btn ".concat(getClassStatus(status), " ").concat(getClassSize(size), " ").concat(setIsRounded(isRounded), " ").concat(setIcon(icon), " ").concat(setDisabled(disabled), " ").concat(className)
  }, icon, label);
}

Button.propTypes = {
  className: _propTypes.default.string,
  label: _propTypes.default.string.isRequired,
  onClick: _propTypes.default.func,
  status: _propTypes.default.string,
  isRounded: _propTypes.default.bool,
  size: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  icon: _propTypes.default.element
};
Button.defaultProps = {
  className: "",
  onClick: undefined,
  status: "primary",
  isRounded: false,
  size: "",
  disabled: false,
  icon: ""
};